

int firstpoint(int arr[],int n,int target){
    int low=0;
    int high=n-1;
    int mid;
    int ans=-1;
    while(low<=high){
        mid=(low+high)/2;
        if(arr[mid]==target){
            high=mid-1;
            ans=mid;
        }
        else if(arr[mid]>target){
            high=mid-1;
        }else{
            low=mid+1;
        }
    }return ans;
}
int lastpoint(int arr[],int n,int target){
    int low=0;
    int high=n-1;
    int mid;
    int ans=-1;
    while(low<=high){
        mid=(low+high)/2;
        if(arr[mid]==target){
            low=mid+1;
            ans=mid;
        }
        else if(arr[mid]>target){
            high=mid-1;
        }else{
            low=mid+1;
        }
    }return ans;
}
// Function to count the number of occurrences of target in an array
int countFreq(int arr[], int n, int target) {
    // code here..
    int low=firstpoint(arr,n,target);
    int high=lastpoint(arr,n,target);
    if((low==-1) || (high==-1)) return 0;
    else{
    return (high-low)+1;}
    
}
